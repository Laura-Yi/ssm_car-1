<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailing.dao.SchedulecourseMapper">
  <resultMap id="BaseResultMap" type="com.sailing.entity.Schedulecourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classroom" jdbcType="INTEGER" property="classroom" />
    <result column="educationplan" jdbcType="INTEGER" property="educationplan" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="building" jdbcType="VARCHAR" property="building" />
  </resultMap>
  <sql id="Base_Column_List">
    id, classroom, educationplan, `time`, building
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedulecourse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedulecourse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sailing.entity.Schedulecourse">
    insert into schedulecourse (id, classroom, educationplan, 
      `time`, building)
    values (#{id,jdbcType=INTEGER}, #{classroom,jdbcType=INTEGER}, #{educationplan,jdbcType=INTEGER}, 
      #{time,jdbcType=INTEGER}, #{building,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sailing.entity.Schedulecourse">
    <selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
      SELECT LAST_INSERT_ID() AS ID
    </selectKey>
    insert into schedulecourse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classroom != null">
        classroom,
      </if>
      <if test="educationplan != null">
        educationplan,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="building != null">
        building,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classroom != null">
        #{classroom,jdbcType=INTEGER},
      </if>
      <if test="educationplan != null">
        #{educationplan,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="building != null">
        #{building,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sailing.entity.Schedulecourse">
    update schedulecourse
    <set>
      <if test="classroom != null">
        classroom = #{classroom,jdbcType=INTEGER},
      </if>
      <if test="educationplan != null">
        educationplan = #{educationplan,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=INTEGER},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sailing.entity.Schedulecourse">
    update schedulecourse
    set classroom = #{classroom,jdbcType=INTEGER},
      educationplan = #{educationplan,jdbcType=INTEGER},
      `time` = #{time,jdbcType=INTEGER},
      building = #{building,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateScheduleByClassAndTime" parameterType="java.lang.Integer">
    update schedulecourse
    <set>
      <if test="educationplan != null">
        educationplan = #{educationplan,jdbcType=INTEGER},
      </if>
    </set>
    where classroom = #{classroom,jdbcType=INTEGER} and time = #{time,jdbcType=INTEGER}
  </update>
  <select id="selectUnScheduleIds" resultType="java.lang.Integer" >
    select
    id
    from schedulecourse
    where educationplan is null
  </select>
  <select id="selectScheduleByClassId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    schedulecourse.id as id, schedulecourse.classroom as classroom, schedulecourse.educationplan as educationplan, schedulecourse.time as time, educationplan.content as building from schedulecourse
    LEFT JOIN educationplan on schedulecourse.educationplan = educationplan.id  where schedulecourse.classroom = #{classroom,jdbcType=INTEGER}
  </select>
  <select id="selectScheduleByClassAndTime" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from schedulecourse
    where classroom = #{classroom,jdbcType=INTEGER} and time = #{time,jdbcType=INTEGER}
  </select>
  <select id="selectScheduleByeducationId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from schedulecourse
    where educationplan = #{educationplan,jdbcType=INTEGER}
  </select>
</mapper>